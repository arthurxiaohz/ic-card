//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.29 at 11:51:34 ÏÂÎç CST 
//


package org.hi.metadata.hsc.context.service;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.hi.metadata.hsc.context.service package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DefaultValue_QNAME = new QName("", "defaultValue");
    private final static QName _FieldType_QNAME = new QName("", "fieldType");
    private final static QName _IsFull_QNAME = new QName("", "isFull");
    private final static QName _IsParent_QNAME = new QName("", "isParent");
    private final static QName _IsListDisplay_QNAME = new QName("", "isListDisplay");
    private final static QName _EnuLabel_QNAME = new QName("", "enuLabel");
    private final static QName _EntityLabel_QNAME = new QName("", "entityLabel");
    private final static QName _FieldLabel_QNAME = new QName("", "fieldLabel");
    private final static QName _IsSearch_QNAME = new QName("", "isSearch");
    private final static QName _ExtendServiceName_QNAME = new QName("", "extendServiceName");
    private final static QName _Scale_QNAME = new QName("", "scale");
    private final static QName _BaseData_QNAME = new QName("", "baseData");
    private final static QName _EnuValue_QNAME = new QName("", "enuValue");
    private final static QName _IsReadOnly_QNAME = new QName("", "isReadOnly");
    private final static QName _EntityBaseData_QNAME = new QName("", "entityBaseData");
    private final static QName _MainLkFieldName_QNAME = new QName("", "mainLkFieldName");
    private final static QName _IsMainLookup_QNAME = new QName("", "isMainLookup");
    private final static QName _LkServiceName_QNAME = new QName("", "lkServiceName");
    private final static QName _EnumerationEntity_QNAME = new QName("", "enumerationEntity");
    private final static QName _IsLkForeignKey_QNAME = new QName("", "isLkForeignKey");
    private final static QName _Length_QNAME = new QName("", "length");
    private final static QName _ChildServiceName_QNAME = new QName("", "childServiceName");
    private final static QName _FieldName_QNAME = new QName("", "fieldName");
    private final static QName _EntityType_QNAME = new QName("", "entityType");
    private final static QName _TableName_QNAME = new QName("", "tableName");
    private final static QName _EnuCode_QNAME = new QName("", "enuCode");
    private final static QName _ChildForeignKey_QNAME = new QName("", "childForeignKey");
    private final static QName _EntityName_QNAME = new QName("", "entityName");
    private final static QName _Validator_QNAME = new QName("", "validator");
    private final static QName _PackageName_QNAME = new QName("", "packageName");
    private final static QName _IsHidden_QNAME = new QName("", "isHidden");
    private final static QName _ServiceName_QNAME = new QName("", "serviceName");
    private final static QName _Description_QNAME = new QName("", "description");
    private final static QName _LkEntityName_QNAME = new QName("", "lkEntityName");
    private final static QName _ChildEntityName_QNAME = new QName("", "childEntityName");
    private final static QName _IsPrimaryKey_QNAME = new QName("", "isPrimaryKey");
    private final static QName _ExtendEntityName_QNAME = new QName("", "extendEntityName");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.hi.metadata.hsc.context.service
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ChildEntity }
     * 
     */
    public ChildEntity createChildEntity() {
        return new ChildEntity();
    }

    /**
     * Create an instance of {@link ExtendEntity }
     * 
     */
    public ExtendEntity createExtendEntity() {
        return new ExtendEntity();
    }

    /**
     * Create an instance of {@link Field }
     * 
     */
    public Field createField() {
        return new Field();
    }

    /**
     * Create an instance of {@link Service }
     * 
     */
    public Service createService() {
        return new Service();
    }

    /**
     * Create an instance of {@link Entity }
     * 
     */
    public Entity createEntity() {
        return new Entity();
    }

    /**
     * Create an instance of {@link LookupEntity }
     * 
     */
    public LookupEntity createLookupEntity() {
        return new LookupEntity();
    }

    /**
     * Create an instance of {@link Enumeration }
     * 
     */
    public Enumeration createEnumeration() {
        return new Enumeration();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "defaultValue")
    public JAXBElement<String> createDefaultValue(String value) {
        return new JAXBElement<String>(_DefaultValue_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "fieldType")
    public JAXBElement<Integer> createFieldType(Integer value) {
        return new JAXBElement<Integer>(_FieldType_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isFull", defaultValue = "false")
    public JAXBElement<Boolean> createIsFull(Boolean value) {
        return new JAXBElement<Boolean>(_IsFull_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isParent", defaultValue = "false")
    public JAXBElement<Boolean> createIsParent(Boolean value) {
        return new JAXBElement<Boolean>(_IsParent_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isListDisplay", defaultValue = "true")
    public JAXBElement<Boolean> createIsListDisplay(Boolean value) {
        return new JAXBElement<Boolean>(_IsListDisplay_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "enuLabel")
    public JAXBElement<String> createEnuLabel(String value) {
        return new JAXBElement<String>(_EnuLabel_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "entityLabel")
    public JAXBElement<String> createEntityLabel(String value) {
        return new JAXBElement<String>(_EntityLabel_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "fieldLabel")
    public JAXBElement<String> createFieldLabel(String value) {
        return new JAXBElement<String>(_FieldLabel_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isSearch", defaultValue = "false")
    public JAXBElement<Boolean> createIsSearch(Boolean value) {
        return new JAXBElement<Boolean>(_IsSearch_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "extendServiceName")
    public JAXBElement<String> createExtendServiceName(String value) {
        return new JAXBElement<String>(_ExtendServiceName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "scale")
    public JAXBElement<Integer> createScale(Integer value) {
        return new JAXBElement<Integer>(_Scale_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "baseData")
    public JAXBElement<Integer> createBaseData(Integer value) {
        return new JAXBElement<Integer>(_BaseData_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "enuValue")
    public JAXBElement<String> createEnuValue(String value) {
        return new JAXBElement<String>(_EnuValue_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isReadOnly", defaultValue = "false")
    public JAXBElement<Boolean> createIsReadOnly(Boolean value) {
        return new JAXBElement<Boolean>(_IsReadOnly_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "entityBaseData")
    public JAXBElement<Integer> createEntityBaseData(Integer value) {
        return new JAXBElement<Integer>(_EntityBaseData_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "mainLkFieldName")
    public JAXBElement<String> createMainLkFieldName(String value) {
        return new JAXBElement<String>(_MainLkFieldName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isMainLookup", defaultValue = "false")
    public JAXBElement<Boolean> createIsMainLookup(Boolean value) {
        return new JAXBElement<Boolean>(_IsMainLookup_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "lkServiceName")
    public JAXBElement<String> createLkServiceName(String value) {
        return new JAXBElement<String>(_LkServiceName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "enumerationEntity")
    public JAXBElement<String> createEnumerationEntity(String value) {
        return new JAXBElement<String>(_EnumerationEntity_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isLkForeignKey", defaultValue = "false")
    public JAXBElement<Boolean> createIsLkForeignKey(Boolean value) {
        return new JAXBElement<Boolean>(_IsLkForeignKey_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "length")
    public JAXBElement<Integer> createLength(Integer value) {
        return new JAXBElement<Integer>(_Length_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "childServiceName")
    public JAXBElement<String> createChildServiceName(String value) {
        return new JAXBElement<String>(_ChildServiceName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "fieldName")
    public JAXBElement<String> createFieldName(String value) {
        return new JAXBElement<String>(_FieldName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "entityType")
    public JAXBElement<Integer> createEntityType(Integer value) {
        return new JAXBElement<Integer>(_EntityType_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "tableName")
    public JAXBElement<String> createTableName(String value) {
        return new JAXBElement<String>(_TableName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "enuCode")
    public JAXBElement<String> createEnuCode(String value) {
        return new JAXBElement<String>(_EnuCode_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "childForeignKey")
    public JAXBElement<String> createChildForeignKey(String value) {
        return new JAXBElement<String>(_ChildForeignKey_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "entityName")
    public JAXBElement<String> createEntityName(String value) {
        return new JAXBElement<String>(_EntityName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "validator")
    public JAXBElement<String> createValidator(String value) {
        return new JAXBElement<String>(_Validator_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "packageName")
    public JAXBElement<String> createPackageName(String value) {
        return new JAXBElement<String>(_PackageName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isHidden", defaultValue = "false")
    public JAXBElement<Boolean> createIsHidden(Boolean value) {
        return new JAXBElement<Boolean>(_IsHidden_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "serviceName")
    public JAXBElement<String> createServiceName(String value) {
        return new JAXBElement<String>(_ServiceName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "description")
    public JAXBElement<String> createDescription(String value) {
        return new JAXBElement<String>(_Description_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "lkEntityName")
    public JAXBElement<String> createLkEntityName(String value) {
        return new JAXBElement<String>(_LkEntityName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "childEntityName")
    public JAXBElement<String> createChildEntityName(String value) {
        return new JAXBElement<String>(_ChildEntityName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isPrimaryKey", defaultValue = "false")
    public JAXBElement<Boolean> createIsPrimaryKey(Boolean value) {
        return new JAXBElement<Boolean>(_IsPrimaryKey_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "extendEntityName")
    public JAXBElement<String> createExtendEntityName(String value) {
        return new JAXBElement<String>(_ExtendEntityName_QNAME, String.class, null, value);
    }

}
