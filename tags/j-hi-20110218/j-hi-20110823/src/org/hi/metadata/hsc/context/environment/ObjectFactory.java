//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.06.07 at 07:44:18 ÏÂÎç CST 
//


package org.hi.metadata.hsc.context.environment;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.hi.generator.context.environment package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Password_QNAME = new QName("", "password");
    private final static QName _TempletDir_QNAME = new QName("", "templetDir");
    private final static QName _StandardOutput_QNAME = new QName("", "standardOutput");
    private final static QName _DriverClass_QNAME = new QName("", "driverClass");
    private final static QName _HomePath_QNAME = new QName("", "homePath");
    private final static QName _AppName_QNAME = new QName("", "appName");
    private final static QName _Username_QNAME = new QName("", "username");
    private final static QName _Url_QNAME = new QName("", "url");
    private final static QName _SrcOutput_QNAME = new QName("", "srcOutput");
    private final static QName _OrgPackage_QNAME = new QName("", "orgPackage");
    private final static QName _LibraryDir_QNAME = new QName("", "libraryDir");
    private final static QName _Dbtype_QNAME = new QName("", "dbtype");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.hi.generator.context.environment
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Generate }
     * 
     */
    public Generate createGenerate() {
        return new Generate();
    }

    /**
     * Create an instance of {@link Environment }
     * 
     */
    public Environment createEnvironment() {
        return new Environment();
    }

    /**
     * Create an instance of {@link Connection }
     * 
     */
    public Connection createConnection() {
        return new Connection();
    }

    /**
     * Create an instance of {@link Database }
     * 
     */
    public Database createDatabase() {
        return new Database();
    }

    /**
     * Create an instance of {@link JavaEnvironment }
     * 
     */
    public JavaEnvironment createJavaEnvironment() {
        return new JavaEnvironment();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "password")
    public JAXBElement<String> createPassword(String value) {
        return new JAXBElement<String>(_Password_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "templetDir")
    public JAXBElement<String> createTempletDir(String value) {
        return new JAXBElement<String>(_TempletDir_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "standardOutput")
    public JAXBElement<String> createStandardOutput(String value) {
        return new JAXBElement<String>(_StandardOutput_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "driverClass")
    public JAXBElement<String> createDriverClass(String value) {
        return new JAXBElement<String>(_DriverClass_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "homePath")
    public JAXBElement<String> createHomePath(String value) {
        return new JAXBElement<String>(_HomePath_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "appName")
    public JAXBElement<String> createAppName(String value) {
        return new JAXBElement<String>(_AppName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "username")
    public JAXBElement<String> createUsername(String value) {
        return new JAXBElement<String>(_Username_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "url")
    public JAXBElement<String> createUrl(String value) {
        return new JAXBElement<String>(_Url_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "srcOutput")
    public JAXBElement<String> createSrcOutput(String value) {
        return new JAXBElement<String>(_SrcOutput_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "orgPackage")
    public JAXBElement<String> createOrgPackage(String value) {
        return new JAXBElement<String>(_OrgPackage_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "libraryDir")
    public JAXBElement<String> createLibraryDir(String value) {
        return new JAXBElement<String>(_LibraryDir_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "dbtype")
    public JAXBElement<String> createDbtype(String value) {
        return new JAXBElement<String>(_Dbtype_QNAME, String.class, null, value);
    }

}
